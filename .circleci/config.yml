version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
           
      # install fbl
      - run: sudo npm i -g fbl

      # prepare dir
      - run: mkdir test

      - run:
          name: Git Config
          command: |
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"

      # generate project
      - run: 
          name: Generate Project without Docker Support
          command: |
            fbl \
              --verbose \
              -a \$.ctx.name=test \
              -a \$.ctx.license=MIT \
              -a \$.ctx.description=My\ Test \
              -a \$.ctx.author=Foo \
              -a \$.ctx.destination=./test \
              -a \$.ctx.git.init=true \
              -a \$.ctx.git.commit=true \
              -a \$.ctx.docker=false \
              -a \$.ctx.circleci=true \
              ./             

      - run: 
          name: Generate Project with Docker Support
          command: |
            rm -rf ./test
            fbl \
              --verbose \
              -a \$.ctx.name=test \
              -a \$.ctx.license=MIT \
              -a \$.ctx.description=My\ Test \
              -a \$.ctx.author=Foo \
              -a \$.ctx.destination=./test \
              -a \$.ctx.git.init=true \
              -a \$.ctx.git.commit=true \
              -a \$.ctx.docker=true \
              -a \$.ctx.circleci=true \
              ./         

      # build generated module
      # note: `yarn install` is part of module generation flow, so all dependencies should already be installed
      - run:
          command: yarn build
          working_directory: ~/repo/test

      # test generated module
      - run:
          command: yarn test
          working_directory: ~/repo/test

      # test for outdated packages
      - run:
          command: yarn outdated
          working_directory: ~/repo/test

      